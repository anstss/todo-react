{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b56e0d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className='app-header d-flex'>\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: ''\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input type='text'\r\n             className='form-control search-input'\r\n             placeholder='type to search'\r\n             value={this.state.term}\r\n             onChange={this.onSearchChange}/>\r\n    );\r\n  }\r\n};","import React, { Component } from \"react\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ]\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive =  filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n      return <button type='button' className={`btn ${clazz}`} key={name}\r\n      onClick={() => onFilterChange(name)}>{label}</button>\r\n    });\r\n\r\n    return (\r\n      <div className='btn-group'>\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, onDeleted,\r\n      onToggleImportant, onToggleDone,\r\n      important, done} = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className='todo-list-item-label'\r\n        onClick={onToggleDone}>\r\n          { label }\r\n        </span>\r\n        <button type='button' className='btn btn-outline-success btn-sm float-end'\r\n        onClick={onToggleImportant}>\r\n          !\r\n        </button>\r\n        <button type='button' className='btn btn-outline-danger btn-sm float-end'\r\n        onClick={onDeleted}>\r\n          -\r\n        </button>\r\n    </span>\r\n    );\r\n  };\r\n}","import React from 'react';\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                    onToggleImportant,\r\n                    onToggleDone}) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const {id, ...itemProps} = item;\r\n\r\n    return (\r\n      <li key={id} className='list-group-item'>\r\n        <TodoListItem {...itemProps}\r\n                      onDeleted={() => onDeleted(id)}\r\n                      onToggleImportant={() => onToggleImportant(id)}\r\n                      onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className='list-group todo-list'>\r\n      {elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React, {Component} from \"react\";\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className='item-add-form d-flex'\r\n            onSubmit={this.onSubmit}>\r\n        <input type='text'\r\n               className='form-control'\r\n               onChange={this.onLabelChange}\r\n               placeholder='What needs to be done?'\r\n               value={this.state.label}/>\r\n        <button className='btn btn-outline-secondary'>\r\n          Add Item\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter/item-status-filter\";\r\nimport TodoList from \"../todo-list/todo-list\";\r\n\r\nimport './app.css';\r\nimport ItemAddForm from \"../item-add-form/item-add-form\";\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('React Basics'),\r\n      this.createTodoItem('React Events'),\r\n      this.createTodoItem('Async Race')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArr = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({todoData}) => {\r\n      const newArr = [...todoData, newItem];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term});\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter});\r\n  }\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase()\r\n        .indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { todoData, term, filter} = this.state;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className='todo-app'>\r\n        <AppHeader toDo={todoCount} done={doneCount}/>\r\n        <div className='top-panel d-flex'>\r\n          <SearchPanel onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter filter={filter}\r\n          onFilterChange = {this.onFilterChange}/>\r\n        </div>\r\n        <TodoList todos = {visibleItems}\r\n                  onDeleted={this.deleteItem}\r\n                  onToggleImportant={this.onToggleImportant}\r\n                  onToggleDone={this.onToggleDone}/>\r\n        <ItemAddForm onItemAdded = {this.addItem}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/app/app\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}